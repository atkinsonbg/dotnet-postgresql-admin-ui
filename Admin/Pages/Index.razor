@page "/"

<PageTitle>Index</PageTitle>

@using Admin.Data
@using System.Dynamic

@inject DatabaseService DatabaseService
@inject IJSRuntime JsRuntime

<RadzenSplitter Orientation="Orientation.Vertical" style="height: 600px; border: 1px solid rgba(0,0,0,.08);">
    <RadzenSplitterPane Size="100px">
        <RadzenSplitter>
            <RadzenSplitterPane Size="20%" Min="30px" Max="40%">
                <RadzenCard style="height: 100%;">
                    <span>@Environment.GetEnvironmentVariable("SCHEMA")</span>
                    <RadzenTree Data=@schema>
                        <RadzenTreeLevel TextProperty="Table" ChildrenProperty="Columns">
                            <Template>
                                <strong>@context.Text</strong>
                                <RadzenButton Click=@(args => OnClickTable(@context.Text)) Icon="add_circle_outline"
                                    ButtonStyle="ButtonStyle.Secondary" />
                            </Template>
                        </RadzenTreeLevel>
                        <RadzenTreeLevel TextProperty="Column" HasChildren="@((column) => false)">
                            <Template>
                                <span class="col-name">@((context.Value as SchemaQueryResult).Column)</span>
                                <span class="col-type">@((context.Value as SchemaQueryResult).Type)</span>
                            </Template>
                        </RadzenTreeLevel>
                    </RadzenTree>

                </RadzenCard>
            </RadzenSplitterPane>
            <RadzenSplitterPane>

                <RadzenSplitter Orientation="Orientation.Vertical"
                    style="height: 600px; border: 1px solid rgba(0,0,0,.08);">
                    <RadzenSplitterPane Size="30%">
                        <RadzenSplitter>
                            <RadzenSplitterPane Size="50px" Min="30px">
                                <RadzenCard style="height: -webkit-fill-available;">
                                    <RadzenTextArea Class="w-100" @bind-Value=@query
                                        style="height: -webkit-fill-available; margin-bottom: 10px;" />
                                    <RadzenButton Click=@(args => OnClickExecute()) Text="Execute"
                                        ButtonStyle="ButtonStyle.Secondary" />
                                    <p>
                                        <label>@errorMessage</label>
                                    </p>
                                </RadzenCard>
                            </RadzenSplitterPane>
                        </RadzenSplitter>
                    </RadzenSplitterPane>
                    <RadzenSplitterPane Size="70%">
                        <RadzenSplitter>
                            <RadzenSplitterPane Size="50px" Min="30px">
                                <RadzenCard style="height: -webkit-fill-available;">
                                    @if (results == null)
                                    {
                                        <p><em>Enter a SQL statement, and click "Execute".</em></p>
                                    }
                                    else
                                    {
                                        <RadzenGrid Count="results.Result.TotalCount" PageSize="5"
                                        Data="@results.Result.Items">
                                            <Columns>
                                                @foreach (var key in results.Headers.Keys)
                                                {
                                                    <RadzenGridColumn TItem="ExpandoObject" Property="@key"
                                                Title="@results.Headers[key].ToString()">
                                                        <Template Context="data">
                                                            <span>@((data as IDictionary<string,
                                                        object>)[key].ToString())</span>
                                                        </Template>
                                                    </RadzenGridColumn>
                                                }
                                            </Columns>
                                        </RadzenGrid>
                                    }
                                </RadzenCard>
                            </RadzenSplitterPane>
                        </RadzenSplitter>
                    </RadzenSplitterPane>
                </RadzenSplitter>

            </RadzenSplitterPane>
        </RadzenSplitter>
    </RadzenSplitterPane>
</RadzenSplitter>

@code {
    private string query = "";
    private string errorMessage = "";
    private DatabaseQueryResult results;
    private List<DatabaseSchemaResult> schema;

    protected override async Task OnInitializedAsync()
    {
        schema = DatabaseService.GetDatabaseSchema().Result;
    }

    void OnClickExecute()
    {
        try
        {
            results = DatabaseService.FromRawSqlAsync(query).Result;
            errorMessage = "";
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    void OnClickTable(string tableName)
    {
        query = $"select * from {tableName}";
    }
}